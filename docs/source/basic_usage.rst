.. _NCBI Taxonomy: https://www.ncbi.nlm.nih.gov/taxonomy
.. _Bowtie: http://bowtie-bio.sourceforge.net/index.shtml
.. |out_dir| replace:: /entap_outfiles
.. |libs_dir| replace:: /libs
.. |entap_dir| replace:: /EnTAP
.. |src_dir| replace:: /src
.. |config_file| replace:: entap_config.ini
.. |bin_dir| replace:: /bin
.. |test_dir| replace:: /test_data
.. |data_dir| replace:: /databases
.. |tax_file| replace:: download_tax.pl
.. |graph_file| replace:: entap_graphing.py
.. |go_term| replace:: go_term.entp
.. |tax_bin| replace:: ncbi_tax_bin.entp
.. |tax_data| replace:: ncbi_tax.entp

.. |flag_path| replace:: ini
.. |flag_taxon| replace:: taxon


Execution
============

Execution is the main stage of EnTAP that will annotate a transcriptome input by the user. After following the installation/configuration steps at least once, all of the required databases have been downloaded and configured so that Execution can be ran. Configuration will not need to be ran again unless you would like to update any databases or configure more.

The following stages will be run:

#. :ref:`Expression Filtering<exp-label>` (optional)
#. :ref:`Frame Selection<frame-label>` (optional)
#. Similarity Search
#. Orthologous Group Assignment
#. InterProScan (optional)

Input Files:
^^^^^^^^^^^^^^^^^
Required:

* .FASTA formatted transcriptome file (either protein or nucleotide)
* .dmnd (DIAMOND) indexed databases, which can be formatted in the :ref:`Configuration<config-label>` stage. 

Optional:

* .BAM/.SAM alignment file. If left unspecified expression filtering will not be performed. 
    * This can be generated by software that does not perform gapped alignments such as `Bowtie`_ (not Bowtie2). All you need to generate an alignment file is a pair of reads and your assembled transcriptome!

Sample Run:
^^^^^^^^^^^^^^^^^

A specific run flag (**runP/runN**) must be used:

* runP: Indicates blastp. Frame selection will be ran if nucleotide sequences are input
* runN: Indicates blastx. Frame selection will not be ran with this input


An example run with a nucleotide transcriptome (transcriptome.fasta), two reference DIAMOND databases, an alignment file (alignment.sam), and 8 threads:

.. code-block:: bash

    EnTAP --runP -i path/to/transcriptome.fasta -d path/to/database.dmnd -d path/to/database2.dmnd -a path/to/alignment.sam --ini path/to/ini_file -t 8


With the above command, the entire EnTAP pipeline will run. Both Frame Selection and Expression Filtering can be skipped if preferred by the user. If a protein transcriptome is input with the runP flag, or the runN flag is used, Frame Selection will be skipped.  If there is not a short read alignment file provided in SAM/BAM format, then Expression Filtering via RSEM will be skipped. 


Flags:
^^^^^^^^^^^^^^^^^^^^^

The following flags will either reside in the ini file (entap_config.ini) or can be called via the command line. 

Required Flags:

* (- - runP/- - runN)
    * Specify a blastp or blastx annotation
    * If - -runP is selected with a nucleotide input, frame selection will be ran and annotation stages will be executed with protein sequences (blastp)
    * If - -runP is selected with a protein input, frame selection will not be ran and annotation will be executed with protein sequences (blastp)
    * If - -runN is selected with nucleotide input, frame selection will not be ran and annotation will be executed with nucleotide sequences (blastx)

* (-i/- - input)
    * Path to the transcriptome file (either nucleotide or protein)

* (-d/- - database)
    * Specify up to 5 DIAMOND indexed (.dmnd) databases to run similarity search against

* (- - |flag_path|)
    * Point to |config_file| to specify proper database and execution paths
    * Default: |config_file| residing in the current working directory

Optional Flags:

* (-a/- -align)
    * Path to alignment file (either SAM or BAM format)
    * **Note:** Ignoring this flag will skip expression filtering
    * If you have ran alignment with single end reads be sure to use the - -single-end flag as well (paired-end is default)
    * Be sure to specify an FPKM threshold

* (- - contam)
    * Specify :ref:`contaminant<tax-label>` level of filtering
    * Multiple contaminants can be selected through repeated flags

* (- - taxon)
    * This flag will allow for :ref:`taxonomic<tax-label>` 'favoring' of hits that are closer to your target species or lineage. Any lineage can be used as referenced by the NCBI Taxonomic database, such as genus, phylum, or species.
    * Format **must** replace all spaces with underscores ('_') as follows: "- -taxon homo_sapiens" or "- -taxon primates"

* (- - level)
    * Specify Gene Ontology levels you would like to normalize to
    * Any amount of these flags can be used
    * Default: 0 (every level), 3, 4
    * More information at: http://geneontology.org/page/ontology-structure

* (- - out-dir)
    * Specify output folder labelling.
    * Default: /outfiles

* (- - fpkm)
    * Specify FPKM cutoff for expression filtering
    * Default: 0.5

* (-e)
    * Specify minimum E-value cutoff for similarity searching
    * Default: 10E-5

* (- - tcoverage)
    * Specify minimum target coverage for similarity searching
    * Default: 50%

* (- - qcoverage)
    * Specify minimum query coverage for similarity searching
    * Default: 50%

* (- - overwrite)
    * All previously ran files will be overwritten if the same - -tag flag is used
    * Without this flag EnTAP will :ref:`recognize<over-label>` previous runs and skip things that were already ran

* (- - single-end)
    * Signify your reads are single end for RSEM execution
    * Default: paired-end 

* (- - graph)
    * This will check whether or not your system has graphing functionality supported and exit
    * If Python with the Matplotlib module are installed on your system graphing should be enabled!
    * This can be specified on its own

* (-t/ - - threads)
    * Specify the number of threads of execution

* ( - - no-trim)
    * By default, EnTAP will trim your sequence headers to the first space to maintain compatbility across different software. Using this flag will instead retain the information of the header by removing all spaces.
    * Example: 
   
        * >TRINITY_231.1 protein12312_43 inform
        * >TRINITY_231.1protein12312_43inform

    * A word of caution when using this flag. EnTAP may have difficulty matching sequence headers from BAM/SAM files to your input transcriptome during Expression Analysis. You will receive an error if this occurs. 

* (- - state)
    * Precise control over execution :ref:`stages<state-label>`. This flag allows for certain parts to be ran while skipping others. 
    * Warning: This may cause issues depending on what you plan on running! 

* (- - ontology)
    * Specify which ontology packages you would like to use

        * 0 - EggNOG (default)
        * 1 - InterProScan

    * Both or either can be specified with multiple flags

        * Ex: - - ontology 0 - - ontology 1
        * This will run both EggNOG and InterProScan 

* (- - protein)
    * Use this option if you would like to run InterProScan
    * Specify databases to run against (you must have them already installed)
      
        * tigrfam
        * sfld
        * prodom
        * hamap
        * pfam
        * smart
        * cdd
        * prositeprofiles
        * prositepatterns
        * superfamily
        * prints
        * panther
        * gene3d
        * pirsf
        * coils
        * mobidblite

* (- - version)
    * Prints the current EnTAP version you are running

* (- - uninformative)
    * Path to a list of terms you would like to be deemed "uninformative"
    * The file **must** be formatted with one term on each line of the file
    * Example (defaults):
    
        * conserved
        * predicted
        * unnamed
        * hypothetical
        * putative
        * unidentified
        * uncharacterized
        * unknown
        * uncultured
        * uninformative

* (- - no-check)
    * EnTAP checks execution paths and inputs prior to annotating to prevent finding out your input was wrong until midway through a run. Using this flag will eliminate the check (not advised to use!)

* (- - output-format)
    * Specify multiple output file formats for each stage of the pipeline

        * 1. TSV File (default)
        * 2. CSV File
        * 3. FASTA Protein File (default)
        * 4. FASTA Nucleotide File (default)

* (- - data-type)
    * Specify which database you'd like to execute against (not advised to use)

        * 0. Binary Database (default) - This will be much quicker and is recommended
        * 1. SQL Database - Slower 

    * If you flag this multiple times during execution, EnTAP will just select the first one you input


.. _exp-label:

Expression Analysis
^^^^^^^^^^^^^^^^^^^^^^^
The goal of expression filtering, or transcript quantification, is to determine the relative 
abundance levels of transcripts when taking into account the sequenced reads and how they map 
back to the assembled transcriptome and using this information to filter out suspect expression 
profiles possibly originated from poor or incomplete assemblies. Filtering is done through the use
of the FPKM (fragments per kilobase per of million mapped reads) , or a measurable number of 
expression. This can be specified with the - -fpkm flag as specified above. EnTAP will use this FPKM value
and remove any sequences that are below the threshold.

.. _frame-label:

Frame Selection
^^^^^^^^^^^^^^^^^^
Frame selection is the process of determining the coding region of a transcript. Oftentimes, due to 
assembly errors or other factors, a coding region may not be found for a transcript and EnTAP will remove
this sequence. When a coding region is found, EnTAP will include the sequence for further annotation.

.. _tax-label:

Taxonomic Favoring and Contaminant Filtering
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Taxonomic contaminant filtering (as well as taxonomic favoring) is based upon the `NCBI Taxonomy`_ database. In saying this, all species/genus/lineage names must be contained within this database in order for it to be recognized by EnTAP. 

**Contaminant Filtering:**

Contaminants can be introduced during collection or processing of a sample. A contaminant is essentially a species that is not of the target species you are collecting. Some common contaminants are bacteria and fungi that can sometimes be found within collected samples. If a query sequence from your transcriptome is found when matching against a similarity search database, it will be flagged as such (but NOT removed automatically). Oftentimes, researchers would like to remove these sequences from the dataset. 

An example of flagging bacteria and fungi as contaminants can be seen below:

.. code-block:: bash

    EnTAP --runP -i path/to/transcriptome.fasta -d path/to/database.dmnd -c fungi -c bacteria


**Taxonomic Favoring**

During best hit selection of similarity searched results, taxonomic consideration can utilized. If a certain lineage (such as sapiens) is specified, hits closer in taxonomic lineage to this selection will be chosen. Any lineage such as species/kingdom/phylum can be utilized as long as it is contained within the Taxonomic Database. If it is not located within the database, EnTAP will stop the execution immediately and let you know! 

This feature can be utilized with the |flag_taxon| flag. An example command utilizing both common contaminants and a species taxon can be seen below:

.. code-block:: bash

    EnTAP --runP -i path/to/transcriptome.fasta -d path/to/database.dmnd -c fungi -c bacteria --taxon sapiens

Keep in mind, EnTAP will weigh the E-Value (within a database)and Coverage of the alignment before taxonomic weight in order to provide the most accurate result. If both the E-Value and Coverage are relatively similar, EnTAP will leverage taxonomic information.

.. _over-label:

Picking Up Where You Left Off
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

In order to save time and make it easier to do different analyses of data, EnTAP allows for picking up where you left off if certain stages were already ran and you'd like analyze data with different contaminant flags or taxonomic favoring. As an example, if similarity searching was ran previously you can skip aligning against the database and analyze the data to save time. However, the - - overwrite flag will not allow for this as it will remove previous runs and not recognize them. 

In order to pick up and skip re-running certain stages again, the files that were ran previously **must** be in the same directories and have the same names. With an input transcriptome name of 'transcriptome' and example database of 'complete.protein':

* Expression Filtering
    * transcriptome.genes.results

* Frame Selection
    * transcriptome.fasta.faa
    * transcriptome.fasta.fnn
    * transcriptome.fasta.lst

* Similarity Search
    * blastp_transcriptome_complete.protein.faa.out

* Gene Family
    * blastp_transcriptome_eggnog_proteins.out (for runP)
    * blastp_transcriptome_eggnog_proteins.out (for runN)


Since file naming is based on your input as well, the flags below **must** remain the same:

* (- - runN / - - runP)

* (- - ontology)

* (- - protein)

* (-i / - - input)

* (-a / - - align)

* (-d / - - database)
    * Does not necessarily need to remain the same. If additional databases are added, EnTAP will recognize the new ones and run similarity searching on them whilst skipping those that have already been ran

* (- - qcoverage)

* (- - tcoverage)

* (- - no-trim)

* (- - out-dir)


.. _state-label:

State Control
^^^^^^^^^^^^^^

.. warning:: This is experimental and certain configurations may not work. This is not needed if you'd like to run certain portions because of "picking up where you left off!"

State control of EnTAP allows you to further customize your runs. This is separate from the exclusion of - - align flag to skip expression filtering, or runP, instead of runN, to skip frame selection. You probably will never actually have to use this feature! Nonetheless, state control is based around the following stages of EnTAP:

#. Expression Filtering
#. Frame Selection
#. Transcriptome Filtering (selection of final transcriptome)
#. Similarity Search
#. Gene Ontology / Gene Families

With this functionality of EnTAP, you can execute whatever states you would like with certain commands. Using a '+' will execute from that state to the end, while using a 'x' will stop at that state. These basic commands can be combined to execute whatever you would like. It's easier if I lay out some examples:

* (- - state 1+)
    * This will start at expression filtering and continue to the end of the pipeline

* (- - state 1+4x)
    * This will start at expression filtering and stop after similarity search

* (- - state 4x)
    * This will just execute similarity search and stop

* (- - state 1+3x5)
    * This will essentially execute every stage besides similarity searching

The default 'state' of EnTAP is merely '+'. This executes every stage of the pipeline (or attempts to if the correct commands are in place). 
