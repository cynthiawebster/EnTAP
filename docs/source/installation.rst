.. _Boost: http://www.boost.org/users/download/
.. _Perl: https://www.perl.org/
.. _Python: https://www.python.org/
.. _RSEM: https://github.com/deweylab/RSEM
.. _EggNOG-Emapper: https://github.com/jhcepas/eggnog-mapper
.. _DIAMOND: https://github.com/bbuchfink/diamond
.. _GeneMarkS-T: http://exon.gatech.edu/GeneMark/
.. _CMake: https://cmake.org/
.. _InterProScan: https://github.com/ebi-pf-team/interproscan
.. _TransDecoder: https://github.com/TransDecoder/TransDecoder/releases
.. _NCBI Taxonomy: https://www.ncbi.nlm.nih.gov/taxonomy

.. |ref_comp| replace:: ftp://ftp.ncbi.nlm.nih.gov/refseq/release/complete/
.. |ref_plant| replace:: ftp://ftp.ncbi.nlm.nih.gov/refseq/release/plant/
.. |ref_mamm| replace:: ftp://ftp.ncbi.nlm.nih.gov/refseq/release/vertebrate_mammalian/
.. |ref_nr| replace:: ftp://ftp.ncbi.nlm.nih.gov/blast/db/
.. |uni_swiss| replace:: ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz
.. |uni_trembl| replace:: ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_trembl.fasta.gz
.. |entap_bin_ftp| replace:: https://treegenesdb.org/FTP/EnTAP/latest/databases/entap_database.bin.gz
.. |entap_sql_ftp| replace:: https://treegenesdb.org/FTP/EnTAP/latest/databases/entap_database.db.gz
.. |eggnog_sql_ftp| replace:: http://eggnog5.embl.de/download/eggnog_4.1/eggnog-mapper-data/eggnog.db.gz
.. |eggnog_fasta_ftp| replace:: http://eggnog5.embl.de/download/eggnog_4.1/eggnog-mapper-data/eggnog4.clustered_proteins.fa.gz
.. |config_file| replace:: entap_config.ini
.. |flag_path| replace:: ini


EnTAP Installation and Configuration
======================================
EnTAP is packaged with all of the software necessary to fully annotate a set of transcripts.  It is optimized to allow a single-command execution for all steps in the pathway, including paramterization by the user.  EnTAP does not have a graphical user interface but it does generate visual summaries for the user at each stage as well as detailed summary files and logs. EnTAP must be :ref:`installed<install-label>` and :ref:`configured<config-label>` in order to begin annotating! A :ref:`test<test-label>` dataset comes with EnTAP to ensure it has been configured properly.

.. _install-label:

Installation
--------------

Before full EnTAP installation, dependencies must be checked to see if they are included in your system (many are by default) and the accompanying pipeline software will need to be installed (unless already present on the system).

#. :ref:`System Requirements<sys-label>`
#. :ref:`Dependency Check<dep-label>`
#. :ref:`Pipeline Software<pipe-label>`
#. :ref:`EnTAP Installation<entap-label>`

After installation is complete, EnTAP must be :ref:`configured<config-label>` in order to start using it. Configuration will simply download the necessary databases that are used by EnTAP. 

.. _sys-label:

System Requirements
^^^^^^^^^^^^^^^^^^^^^
  
    * Operating System

        * UNIX-based systems
        * Tested on 64 bit systems: ubuntu 16.04, Rocks 6.1, Centos 6.3

    * Storage Minimum

        * EnTAP Database (Gene Ontology References + UniProt Mapping + NCBI Taxonomy): 1.5Gb
        * EggNOG Databases: 24Gb
        * DIAMOND Databases: ~13Gb (with RefSeq Complete Protein + Uniprot Swiss-Prot)
        * Additional storage for files generated depending on transcriptome size: upwards of 15Gb

    * Memory

        * At least 16 Gb of RAM (will vary depending on DIAMOND database sizes). More memory is highly recommended to reduce execution times.

.. _dep-label:

Dependency Check
^^^^^^^^^^^^^^^^^^^^^^
Before continuing on in the installation process, ensure that the following dependencies are fully installed on your system:

    * C++11 compiler (GCC 4.8.1 or later)
	
    * CMake_ (3.00 or later)
	
		
    * Python_ (2.7.12 or later) with support for the following modules	
        * Matplotlib (figures generated by EnTAP)
		
    * Unix wget (generally included in most distros)
	
    * Unix gzip/tar (generally included in most distros)


.. _pipe-label:

Pipeline Software
^^^^^^^^^^^^^^^^^^^^^
EnTAP leverages several software distributions within the pipeline to provide the best quality annotations. The packages used (and their current/tested versions) can be seen below. This is not to say that newer versions will not be compatible, however they have not been tested yet with EnTAP. By default, EnTAP will use Transdecoder for frame selection, however both TransDecoder and GeneMarkS-T are supported and you may install either.

.. note:: If the software is already installed on your system, this stage can be skipped

Software:
    * RSEM_ (Expression Filtering with alignment file): version 1.3.0 packaged with EnTAP

    * TransDecoder_ (Frame Selection): version 5.3.0 must be installed separately (if not using GeneMarkS-T)

    * GeneMarkS-T_ (Frame Selection): version 5.1 must be installed separately (if not using TransDecoder)

    * DIAMOND_ (Similarity Search): version 0.9.9 packaged with EnTAP
        * Version 0.8.31
        * Version 0.9.19

    * InterProScan_ (Protein Databases): version 5.19 must be installed separately

If you have downloaded the full repository from the GitLab page, each of these (with the exception of GeneMarkS-T and Transdecoder) are contained within the /libs directory. GeneMarkS-T must be acquired from the website linked previously due to licensing (free for academic use). 


RSEM and DIAMOND both require compilation from source code while GeneMarkS-T does not. To compile these, follow the directions below. These are also found on the respective GitHub pages and are subject to change depending on the version.

.. _diamond-label:

DIAMOND Installation
^^^^^^^^^^^^^^^^^^^^^^^^^
From root EnTAP directory...

.. code-block :: bash

    cd libs/diamond-0.8.31
    mkdir bin
    cd bin
    cmake ..

Run the following command to install globally:

.. code-block :: bash

    make install

Run the following command to compile:

.. code-block :: bash

    make


All set! Ensure that DIAMOND has been properly setup and add the correct path to the entap_config.txt file. If installed globally, add 'diamond' (without quotes) to the file. If installed locally, add 'path/to/EnTAP/libs/diamond-0.9.9/bin/diamond'.

.. _rsem-label:

RSEM Installation
^^^^^^^^^^^^^^^^^^^^^

From root EnTAP directory...

.. code-block :: bash

    cd libs/RSEM-1.3.0
    make
    make ebseq

Run the following command to install globally:

.. code-block :: bash

    make install

All set! Ensure that RSEM has been properly setup and add the correct path to the entap_config.txt file. If installed globally keep blank. If installed locally, add 'path/to/EnTAP/libs/RSEM-1.3.0/'.

.. _entap-label:

EnTAP Installation
^^^^^^^^^^^^^^^^^^^^^

Once dependencies and pipeline software have been installed, you can now continue to install EnTAP! 

First, download and extract the latest release(tagged) version from GitLab:
https://gitlab.com/EnTAP/EnTAP/tags

Within the main directory, execute the following command:

.. code-block :: bash

    cmake CMakeLists.txt

This will generate a MakeFile. Then execute:

.. code-block :: bash

    make

Or to install to a destination directory:

.. code-block :: bash

    cmake CMakeLists.txt -DCMAKE_INSTALL_PREFIX=/destination/dir

.. code-block :: bash

    make install

This will complete the installation process. You are ready to start using EnTAP!

.. _config-label:

Configuration
----------------------

After installation is complete, EnTAP must be configured for use. This stage will simply download and configure the necessary databases for full functionality. Configuration can be ran at anytime by a user or the system admin if they would like to update databases. It is in the installation section because it might be a bit easier to setup common databases beforehand that can be shared by multiple users.

I'll break this up into two sections, :ref:`Ini File<hierarchy-label>` and :ref:`Usage<usage-label>`. The Ini File section will just describe how to ensure EnTAP is reading from the correct paths, which can be easily changed in the |config_file| (more on that later!). It will also go over the directories included in the installation. The Usage sections will go over the basic usage during the Configuration stage of EnTAP and how to setup reference databases. 

.. _hierarchy-label:

Ini File
^^^^^^^^^^^^^^^^^

From here on out, the "execution", or "EnTAP", directory will refer to the directory containing the EnTAP install (or binary file). Typically, this will just be at the root directory that was downloaded from the repository. All paths mentioned in this documentation will be relative to this directory. 


Why is this important? EnTAP relies on several accompanying software packages and databases in order to run properly. Correct recognition of these paths is crucial and, as such, needed an entire section! The |config_file| is the answer to this pathing issue. It contains all of the necessary paths required for EnTAP (among many other commands) to run and can be configured as seen fit. 

When a user is trying to execute EnTAP, they must specify the path to this ini file with the |flag_path| flag. By default, the ini file comes with some preset paths based on the installation directory. However, these should be checked for validity. If the ini file is not specified and there is not one in the working directory, an empty |config_file| will be generated with the following presets for execution paths. The ini file contains many other commands, but only the execution paths are required for configuration (specifically DIAMOND), so I will get to the others later on. 

    * diamond-exe=/EnTAP/libs/diamond-0.9.9/bin/diamond
    * rsem-sam-validator=/EnTAP/libs/RSEM-1.3.0/rsem-sam-validator
    * rsem-calculate-expression=/EnTAP/libs/RSEM-1.3.0/rsem-calculate-expression
    * rsem-prepare-reference=/EnTAP/libs/RSEM-1.3.0/rsem-prepare-reference
    * rsem-convert-sam-for-rsem=/EnTAP/libs/RSEM-1.3.0/convert-sam-for-rsem
    * genemarkst-exe=/EnTAP/libs/gmst_linux_64/gmst.pl
    * transdecoder-long-exe=TransDecoder.LongOrfs
    * transdecoder-predict-exe=TransDecoder.Predict
    * interpro_exe_path=interproscan.sh

If something is globally installed, such as "interproscan-exe" above, put how you'd normally run the software after the '='. As an example, running DIAMOND through a global installation may simply be "diamond". The Ini File line for DIAMOND will simply read:

    * diamond-exe=diamond


.. warning:: Be sure to at least set the DIAMOND path before moving on 


.. _usage-label:

Preparing Your Reference Databases
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

All source databases must be provided in FASTA format (protein) so that they can be indexed for use by DIAMOND.  This can be completed independent of EnTAP with DIAMOND (- - makedb flag) or as part of the Configuration phase of EnTAP. This section will focus on downloading and preparing some of the more common FASTA source databases. If you already have DIAMOND databases configured, you can skip to :ref:`Running Configuration<usage_config-label>`. Even if you have a DIAMOND database already configured, Configuration must still be ran!

While any protein FASTA database can be used, it is recommended to use NCBI (Genbank) sourced databases such as RefSeq databases or NR.  In addition, EnTAP can easily accept EBI databases such as UniProt/SwissProt.  

EnTAP can recognize the species information from these header formats ONLY (NCBI and UniProt):

* [homo sapiens]

* OS=homo sapiens

If the individual FASTAs in a custom database you create do not adhere to one of these two formats, it will not be possible to weight taxonomic or contaminant status from them. You will need to change the headers to ensure they align. 

The following FTP sites contain common reference databases that EnTAP can recognize:
   * RefSeq: |ref_comp|

   * Plant RefSeq: |ref_plant|

   * Mammalian RefSeq: |ref_mamm|

   * NR: |ref_nr|

   * SwissProt: |uni_swiss|
   
       * Reviewed
       * It is highly recommended to use the UniProt SwissProt database as EnTAP will map all UniProt alignments to additional database cross-references

   * TrEMBL: |uni_trembl|
   
       * Unreviewed

Both Uniprot databases (SwissProt and TrEMBL) can be downloaded on a Unix system through the following command:

.. code-block:: bash
 
    wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz

Or, for the TrEMBL database:

.. code-block:: bash

    wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_trembl.fasta.gz

Alternatively, the NCBI databases must be downloaded in separate, smaller files, and concatenated together. As an example, the following commands will download and combine the NR database files:

Download:

.. code-block:: bash

    wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/nr.*.tar.gz

Decompress/Concatenate:

.. code-block:: bash

    tar -xvzf nr.*
   
    cat nr.* > nr_database.fasta
    

....

It is generally recommended that a user select at least three databases with varying levels of curation.  Unless the species is very non-model (i.e. does not have close relatives in databases such as RefSeq, it is not necessary to use the full NR database which is less curated). Once your FASTA databases are ready, move on to :ref:`Running Configuration<usage_config-label>`.


.. _usage_config-label:

Running Configuration
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Once you have your protein FASTA database ready, you can begin to run the Configuration stage. As mentioned before, Configuration will only need to be run once prior to :ref:`Execution<exe-label>` unless you would like to configure/update more databases. 

To run configuration with a FASTA database to output directory path/to/output (default is current working directory), the command is as follows (additional databases can be specified if necessary with the -d flag and threads with the -t flag):

.. code-block:: bash

    EnTAP --config -d path/to/database.fasta -d path/to/database2.fasta --out-dir path/to/output -t 8


Configuration can be run without formatting a FASTA database for DIAMOND is as follows with 8 threads:

.. code-block:: bash

    EnTAP --config -t 8

.. note:: This is the only stage that requires connection to the Internet.

In both cases, the following databases will be downloaded and configured:

* EnTAP Binary Database:
    * Comprised of Gene Ontology, UniProt, and Taxonomic mappings for use during Execution. FTP downloaded file.
    * Downloaded from |entap_bin_ftp|
    * Filename: entap_database.bin
    * The SQL version is the same database, but formatted as a SQL database. Only one version of the database is needed (binary is used by default)

* EggNOG DIAMOND Reference:
    * Reference database containing EggNOG database entries
    * FASTA file is downloaded and configured for DIAMOND from |eggnog_fasta_ftp|
    * Filename: eggnog_proteins.dmnd

* EggNOG SQL Database:
    * SQL database containing EggNOG mappings
    * Downloaded from |eggnog_sql_ftp|
    * Filename: eggnog.db

.. note:: Either the EnTAP binary database (default) or the EnTAP SQL database is required for execution. Both are not needed.

The EnTAP Binary Database is downloaded from the FTP addresses below. By default, the binary version will be downloaded and used. Only one version is required. If you experience any trouble in downloading, you can simply specify the - - data-generate flag during Configuration to configure it locally (more on that later). The database for the newest version of EnTAP will always reside in the "latest" FTP directory. Keep in mind, if you are using an older version of EnTAP, you do not want to download from the "latest" directory. Instead, you will need to consider the version you are using. The FTP will always be updated only when a new database version is created. For example, if you see v0.8.2 and v0.8.5 on the FTP while you are using v0.8.3, you will download the database located in the v0.8.2 directory. 

    * |entap_bin_ftp|
    * |entap_sql_ftp|


.. warning ::
    DIAMOND databases must be configured and eventually executed with the same version of DIAMOND.

Configuration Flags:
^^^^^^^^^^^^^^^^^^^^^^

Required Flags:

* (- - config)
    * The only required flag. 
    * Although in order to run the full EnTAP pipeline, you must have a .dmnd configured database.

Optional Flags:

* (-d/ - - database)
    * Specify any number of FASTA formatted databases you would like to configure for EnTAP
    * Not necessary if you already have DIAMOND configured databases (.dmnd)

* (- - |flag_path|)
    * Point to |config_file| to specify file paths
    * DIAMOND is the only path necessary during Configuration
    * Default: |config_file| residing in the current working directory

* (- -  out-dir)
    * Specify an output directory for the databases to be sent to (recommended)
    * This will send the EnTAP database and DIAMOND databases to this location

* (- t/ - - threads)
    * Specify thread number for Configuration

* (- - data-generate)
    * Specify this flag is you would like to generate the EnTAP database rather than downloading from FTP (default)
    * I'd only use this if you're having issues with the FTP

* (- - data-type)
    * Specify which databases you'd like to generate/download

        * 0. Binary Database (default) - This will be much quicker and is recommended
        * 1. SQL Database - Slower although will be more easily compatible with every system

    * This can be flagged multiple times (ex: - - data-type 0 - - data-type 1)
    * I would not use this flag unless you are experiencing issues with the EnTAP Binary Database
	
.. test-label:

Test Data
-------------
Before continuing on to the :ref:`Execution<exe-label>` stage, it is advised to do a test run of EnTAP to ensure that everything is properly configured. There should be no errors in the test run. The test data resides within the |test_dir| directory of the main EnTAP directory. This will walk you through configuring a database for DIAMOND (if you haven't already done so) and executing EnTAP with and without frame selection. 

Before we begin, make sure that the paths in the configuration file are correct. Since we are running the configuration stage, EnTAP will check to make sure you have the other databases downloaded (which should have been done prior to this). To begin the test, execute the following command to configure the test DIAMOND database:

.. code-block:: bash

    EnTAP --config -d /test_data/swiss_prot_test.fasta --out-dir /test_data --ini path/to/ini_file


This should finish very shortly without any errors and you should find a swiss_prot_test.dmnd file within the |test_dir| directory. 

Next up is verifying the main execution stage! Once again, first ensure that the Config File has all of the correct paths. We are going to check an execution with and without frame selection. If you are not going to use frame selection, you may skip this test!

.. note:: The following tests will take longer as they will be testing the entire pipeline and running against the larger EggNOG database.

To test EnTAP with frame selection, execute the following command:

.. code-block:: bash

    EnTAP --runP -i /test_data/trinity.fnn -d /test_data/bin/swiss_prot_test.dmnd

To test EnTAP without frame selection, execute the following command:

.. code-block:: bash

    EnTAP --runP -i /test_data/trinity.faa -d /test_data/swiss_prot_test.dmnd

These should run without error and you should have several files within the created |out_dir| directory. The final_annotations_lvl0.tsv file should resemble the test_data/final_annotations_test.tsv file. 

If any failures were seen during the above executions, be sure to go through each stage of installation and configuration to be sure everything was configured correctly before continuing. If you have no received any errors, the following pages will go through the main annotation portion of the pipeline.

.. note:: The ini file may be distributed to each user to ensure they are pointing to the correct database and execution paths.
